package com.mouritech.criteriaqueryexample;

import java.util.Iterator;
import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;
import org.hibernate.criterion.Criterion;
import org.hibernate.criterion.Restrictions;

import com.mouritech.criteriaqueryexample.model.Product;
import com.mouritech.crudwithhibernate.entity.Employee;
import com.mouritech.crudwithhibernate.util.HibernateUtil;

public class CriteriaQueryExample {

	@SuppressWarnings("deprecation")
	public static void main(String[] args) {

		Configuration cfg = new Configuration();
		cfg.configure("hibernate.cfg.xml");
		SessionFactory sFactory = cfg.buildSessionFactory();
		Session session = sFactory.openSession();
		

		Criteria crit = session.createCriteria(Product.class);
		Criterion cn = Restrictions.ge("productPrice", new Float(25000));
		//select * from product where productprice > 25000
		crit.add(cn);
		List productList = crit.list();
		System.out.println("List of total size......"+productList.size());
		Iterator<Product> itr = productList.iterator();
		
		while(itr.hasNext()) {
			Product p = itr.next();
			System.out.println("Product Id = " + p.getProductId());
			System.out.println("Product Id = " + p.getProductName());
			System.out.println("Product Id = " + p.getProductPrice());
			System.out.println("+++++++++++++++++++++++++++++++++++++");
		}
		
		sFactory.close();
		session.close();
		
		

	}
	public void employeeSave() {
		Transaction transaction = null;
		Configuration cfg = new Configuration();
		cfg.configure("hibernate.cfg.xml");
		SessionFactory sFactory = cfg.buildSessionFactory();
		Session session = sFactory.openSession();
			
			// start the transaction
			transaction = session.beginTransaction();
			// save the employee object in to database
			session.save(emp);
			// commit transaction
			transaction.commit();
		
	}
}
